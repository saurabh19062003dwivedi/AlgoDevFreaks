{"ast":null,"code":"const protocols = ['http', 'https', 'mailto', 'tel'];\n\n/**\r\n * @param {string} uri\r\n * @returns {string}\r\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim();\n  const first = url.charAt(0);\n  if (first === '#' || first === '/') {\n    return url;\n  }\n  const colon = url.indexOf(':');\n  if (colon === -1) {\n    return url;\n  }\n  let index = -1;\n  while (++index < protocols.length) {\n    const protocol = protocols[index];\n    if (colon === protocol.length && url.slice(0, protocol.length).toLowerCase() === protocol) {\n      return url;\n    }\n  }\n  index = url.indexOf('?');\n  if (index !== -1 && colon > index) {\n    return url;\n  }\n  index = url.indexOf('#');\n  if (index !== -1 && colon > index) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)';\n}","map":{"version":3,"names":["protocols","uriTransformer","uri","url","trim","first","charAt","colon","indexOf","index","length","protocol","slice","toLowerCase"],"sources":["C:/Users/saura/Desktop/AlgoDevFreaks/node_modules/react-markdown/lib/uri-transformer.js"],"sourcesContent":["const protocols = ['http', 'https', 'mailto', 'tel']\r\n\r\n/**\r\n * @param {string} uri\r\n * @returns {string}\r\n */\r\nexport function uriTransformer(uri) {\r\n  const url = (uri || '').trim()\r\n  const first = url.charAt(0)\r\n\r\n  if (first === '#' || first === '/') {\r\n    return url\r\n  }\r\n\r\n  const colon = url.indexOf(':')\r\n  if (colon === -1) {\r\n    return url\r\n  }\r\n\r\n  let index = -1\r\n\r\n  while (++index < protocols.length) {\r\n    const protocol = protocols[index]\r\n\r\n    if (\r\n      colon === protocol.length &&\r\n      url.slice(0, protocol.length).toLowerCase() === protocol\r\n    ) {\r\n      return url\r\n    }\r\n  }\r\n\r\n  index = url.indexOf('?')\r\n  if (index !== -1 && colon > index) {\r\n    return url\r\n  }\r\n\r\n  index = url.indexOf('#')\r\n  if (index !== -1 && colon > index) {\r\n    return url\r\n  }\r\n\r\n  // eslint-disable-next-line no-script-url\r\n  return 'javascript:void(0)'\r\n}\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;;AAEpD;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,GAAG,EAAE;EAClC,MAAMC,GAAG,GAAG,CAACD,GAAG,IAAI,EAAE,EAAEE,IAAI,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;EAE3B,IAAID,KAAK,KAAK,GAAG,IAAIA,KAAK,KAAK,GAAG,EAAE;IAClC,OAAOF,GAAG;EACZ;EAEA,MAAMI,KAAK,GAAGJ,GAAG,CAACK,OAAO,CAAC,GAAG,CAAC;EAC9B,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,OAAOJ,GAAG;EACZ;EAEA,IAAIM,KAAK,GAAG,CAAC,CAAC;EAEd,OAAO,EAAEA,KAAK,GAAGT,SAAS,CAACU,MAAM,EAAE;IACjC,MAAMC,QAAQ,GAAGX,SAAS,CAACS,KAAK,CAAC;IAEjC,IACEF,KAAK,KAAKI,QAAQ,CAACD,MAAM,IACzBP,GAAG,CAACS,KAAK,CAAC,CAAC,EAAED,QAAQ,CAACD,MAAM,CAAC,CAACG,WAAW,CAAC,CAAC,KAAKF,QAAQ,EACxD;MACA,OAAOR,GAAG;IACZ;EACF;EAEAM,KAAK,GAAGN,GAAG,CAACK,OAAO,CAAC,GAAG,CAAC;EACxB,IAAIC,KAAK,KAAK,CAAC,CAAC,IAAIF,KAAK,GAAGE,KAAK,EAAE;IACjC,OAAON,GAAG;EACZ;EAEAM,KAAK,GAAGN,GAAG,CAACK,OAAO,CAAC,GAAG,CAAC;EACxB,IAAIC,KAAK,KAAK,CAAC,CAAC,IAAIF,KAAK,GAAGE,KAAK,EAAE;IACjC,OAAON,GAAG;EACZ;;EAEA;EACA,OAAO,oBAAoB;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}