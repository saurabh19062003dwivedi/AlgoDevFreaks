{"ast":null,"code":"/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').HTML} Html\r\n * @typedef {import('../state.js').State} State\r\n * @typedef {import('../../index.js').Raw} Raw\r\n */\n\n/**\r\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\r\n * nothing).\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Html} node\r\n *   mdast node.\r\n * @returns {Raw | Element | null}\r\n *   hast node.\r\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {\n      type: 'raw',\n      value: node.value\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n  }\n\n  // To do: next major: return `undefined`.\n  return null;\n}","map":{"version":3,"names":["html","state","node","dangerous","result","type","value","patch","applyData"],"sources":["C:/Users/saura/Desktop/AlgoDevFreaks/node_modules/mdast-util-to-hast/lib/handlers/html.js"],"sourcesContent":["/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('mdast').HTML} Html\r\n * @typedef {import('../state.js').State} State\r\n * @typedef {import('../../index.js').Raw} Raw\r\n */\r\n\r\n/**\r\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\r\n * nothing).\r\n *\r\n * @param {State} state\r\n *   Info passed around.\r\n * @param {Html} node\r\n *   mdast node.\r\n * @returns {Raw | Element | null}\r\n *   hast node.\r\n */\r\nexport function html(state, node) {\r\n  if (state.dangerous) {\r\n    /** @type {Raw} */\r\n    const result = {type: 'raw', value: node.value}\r\n    state.patch(node, result)\r\n    return state.applyData(node, result)\r\n  }\r\n\r\n  // To do: next major: return `undefined`.\r\n  return null\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,IAAIA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAChC,IAAID,KAAK,CAACE,SAAS,EAAE;IACnB;IACA,MAAMC,MAAM,GAAG;MAACC,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAEJ,IAAI,CAACI;IAAK,CAAC;IAC/CL,KAAK,CAACM,KAAK,CAACL,IAAI,EAAEE,MAAM,CAAC;IACzB,OAAOH,KAAK,CAACO,SAAS,CAACN,IAAI,EAAEE,MAAM,CAAC;EACtC;;EAEA;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}