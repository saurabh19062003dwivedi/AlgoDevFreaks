{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nimport { studentEndpoints } from \"../apis\";\nimport { apiConnector } from \"../apiconnector\";\nimport rzpLogo from \"../../assets/Logo/rzp_logo.png\";\nimport { setPaymentLoading } from \"../../slices/courseSlice\";\nimport { resetCart } from \"../../slices/cartSlice\";\nconst {\n  COURSE_PAYMENT_API,\n  COURSE_VERIFY_API,\n  SEND_PAYMENT_SUCCESS_EMAIL_API\n} = studentEndpoints;\nfunction loadScript(src) {\n  return new Promise(resolve => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\nexport async function buyCourse(token, courses, userDetails, navigate, dispatch) {\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    //load the script\n    const res = await loadScript(\"http://checkout.razorpay.com/v1/checkout.js\");\n    if (!res) {\n      toast.error(\"RazorPay SDK failed to load\");\n      return;\n    }\n\n    //initiate the order\n    const orderResponse = await apiConnector(\"POST\", COURSE_PAYMENT_API, {\n      courses\n    }, {\n      Authorization: `Bearer ${token}`\n    });\n    if (!orderResponse.data.success) {\n      throw new Error(orderResponse.data.message);\n    }\n    console.log(\"PRINTING orderResponse\", orderResponse);\n    //options\n    const options = {\n      key: process.env.RAZORPAY_KEY,\n      currency: orderresponse.message.currency,\n      amount: `${orderResponse.data.message.amount}`,\n      order_id: orderResponse.data.message.id,\n      name: \"StudyNotion\",\n      description: \"Thank You for Purchasing the Course\",\n      image: rzpLogo,\n      prefill: {\n        name: `${userDetails.firstName}`,\n        email: userDetails.email\n      },\n      handler: function (response) {\n        //send successful wala mail\n        sendPaymentSuccessEmail(response, orderResponse.data.message.amount, token);\n        //verifyPayment\n        verifyPayment({\n          ...response,\n          courses\n        }, token, navigate, dispatch);\n      }\n    };\n    //miss hogya tha \n    const paymentObject = new window.Razorpay(options);\n    paymentObject.open();\n    paymentObject.on(\"payment.failed\", function (response) {\n      toast.error(\"oops, payment failed\");\n      console.log(response.error);\n    });\n  } catch (error) {\n    console.log(\"PAYMENT API ERROR.....\", error);\n    toast.error(\"Could not make Payment\");\n  }\n  toast.dismiss(toastId);\n}\nasync function sendPaymentSuccessEmail(response, amount, token) {\n  try {\n    await apiConnector(\"POST\", SEND_PAYMENT_SUCCESS_EMAIL_API, {\n      orderId: response.razorpay_order_id,\n      paymentId: response.razorpay_payment_id,\n      amount\n    }, {\n      Authorization: `Bearer ${token}`\n    });\n  } catch (error) {\n    console.log(\"PAYMENT SUCCESS EMAIL ERROR....\", error);\n  }\n}\n\n//verify payment\nasync function verifyPayment(bodyData, token, navigate, dispatch) {\n  const toastId = toast.loading(\"Verifying Payment....\");\n  dispatch(setPaymentLoading(true));\n  try {\n    const response = await apiConnector(\"POST\", COURSE_VERIFY_API, bodyData, {\n      Authorization: `Bearer ${token}`\n    });\n    if (!response.data.success) {\n      throw new Error(response.data.message);\n    }\n    toast.success(\"payment Successful, ypou are addded to the course\");\n    navigate(\"/dashboard/enrolled-courses\");\n    dispatch(resetCart());\n  } catch (error) {\n    console.log(\"PAYMENT VERIFY ERROR....\", error);\n    toast.error(\"Could not verify Payment\");\n  }\n  toast.dismiss(toastId);\n  dispatch(setPaymentLoading(false));\n}","map":{"version":3,"names":["toast","studentEndpoints","apiConnector","rzpLogo","setPaymentLoading","resetCart","COURSE_PAYMENT_API","COURSE_VERIFY_API","SEND_PAYMENT_SUCCESS_EMAIL_API","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","buyCourse","token","courses","userDetails","navigate","dispatch","toastId","loading","res","error","orderResponse","Authorization","data","success","Error","message","console","log","options","key","process","env","RAZORPAY_KEY","currency","orderresponse","amount","order_id","id","name","description","image","prefill","firstName","email","handler","response","sendPaymentSuccessEmail","verifyPayment","paymentObject","window","Razorpay","open","on","dismiss","orderId","razorpay_order_id","paymentId","razorpay_payment_id","bodyData"],"sources":["C:/Users/saura/Desktop/StudyNotion-An-Online-Education-Platform-master/src/services/operations/studentFeaturesAPI.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\nimport { studentEndpoints } from \"../apis\";\nimport { apiConnector } from \"../apiconnector\";\nimport rzpLogo from \"../../assets/Logo/rzp_logo.png\"\nimport { setPaymentLoading } from \"../../slices/courseSlice\";\nimport { resetCart } from \"../../slices/cartSlice\";\n\n\nconst {COURSE_PAYMENT_API, COURSE_VERIFY_API, SEND_PAYMENT_SUCCESS_EMAIL_API} = studentEndpoints;\n\nfunction loadScript(src) {\n    return new Promise((resolve) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n\n        script.onload = () => {\n            resolve(true);\n        }\n        script.onerror= () =>{\n            resolve(false);\n        }\n        document.body.appendChild(script);\n    })\n}\n\n\nexport async function buyCourse(token, courses, userDetails, navigate, dispatch) {\n    const toastId = toast.loading(\"Loading...\");\n    try{\n        //load the script\n        const res = await loadScript(\"http://checkout.razorpay.com/v1/checkout.js\");\n\n        if(!res) {\n            toast.error(\"RazorPay SDK failed to load\");\n            return;\n        }\n\n        //initiate the order\n        const orderResponse = await apiConnector(\"POST\", COURSE_PAYMENT_API, \n                                {courses},\n                                {\n                                    Authorization: `Bearer ${token}`,\n                                })\n\n        if(!orderResponse.data.success) {\n            throw new Error(orderResponse.data.message);\n        }\n        console.log(\"PRINTING orderResponse\", orderResponse);\n        //options\n        const options = {\n            key: process.env.RAZORPAY_KEY,\n            currency: orderresponse.message.currency,\n            amount: `${orderResponse.data.message.amount}`,\n            order_id:orderResponse.data.message.id,\n            name:\"StudyNotion\",\n            description: \"Thank You for Purchasing the Course\",\n            image:rzpLogo,\n            prefill: {\n                name:`${userDetails.firstName}`,\n                email:userDetails.email\n            },\n            handler: function(response) {\n                //send successful wala mail\n                sendPaymentSuccessEmail(response, orderResponse.data.message.amount,token );\n                //verifyPayment\n                verifyPayment({...response, courses}, token, navigate, dispatch);\n            }\n        }\n        //miss hogya tha \n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n        paymentObject.on(\"payment.failed\", function(response) {\n            toast.error(\"oops, payment failed\");\n            console.log(response.error);\n        })\n\n    }\n    catch(error) {\n        console.log(\"PAYMENT API ERROR.....\", error);\n        toast.error(\"Could not make Payment\");\n    }\n    toast.dismiss(toastId);\n}\n\nasync function sendPaymentSuccessEmail(response, amount, token) {\n    try{\n        await apiConnector(\"POST\", SEND_PAYMENT_SUCCESS_EMAIL_API, {\n            orderId: response.razorpay_order_id,\n            paymentId: response.razorpay_payment_id,\n            amount,\n        },{\n            Authorization: `Bearer ${token}`\n        })\n    }\n    catch(error) {\n        console.log(\"PAYMENT SUCCESS EMAIL ERROR....\", error);\n    }\n}\n\n//verify payment\nasync function verifyPayment(bodyData, token, navigate, dispatch) {\n    const toastId = toast.loading(\"Verifying Payment....\");\n    dispatch(setPaymentLoading(true));\n    try{\n        const response  = await apiConnector(\"POST\", COURSE_VERIFY_API, bodyData, {\n            Authorization:`Bearer ${token}`,\n        })\n\n        if(!response.data.success) {\n            throw new Error(response.data.message);\n        }\n        toast.success(\"payment Successful, ypou are addded to the course\");\n        navigate(\"/dashboard/enrolled-courses\");\n        dispatch(resetCart());\n    }   \n    catch(error) {\n        console.log(\"PAYMENT VERIFY ERROR....\", error);\n        toast.error(\"Could not verify Payment\");\n    }\n    toast.dismiss(toastId);\n    dispatch(setPaymentLoading(false));\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}